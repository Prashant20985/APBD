// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tutorial_8.Models;

namespace tutorial_8.Migrations
{
    [DbContext(typeof(Clinic_DbContext))]
    partial class ClinicDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("tutorial_8.Models.Authentication.AppUser", b =>
                {
                    b.Property<int>("IdAppUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefresHTokentExpirration")
                        .HasColumnType("datetime2");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAppUser");

                    b.ToTable("AppUser");
                });

            modelBuilder.Entity("tutorial_8.Models.Doctor", b =>
                {
                    b.Property<int>("IdDoctor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdDoctor");

                    b.ToTable("Doctor");

                    b.HasData(
                        new
                        {
                            IdDoctor = 1,
                            Email = "ww@gamil.com",
                            FirstName = "Walter",
                            LastName = "White"
                        },
                        new
                        {
                            IdDoctor = 2,
                            Email = "jp@gmail.com",
                            FirstName = "Jesse",
                            LastName = "Pinkman"
                        },
                        new
                        {
                            IdDoctor = 3,
                            Email = "sg@gamil.com",
                            FirstName = "Saul",
                            LastName = "Goodman"
                        },
                        new
                        {
                            IdDoctor = 4,
                            Email = "gusf@gamil.com",
                            FirstName = "Gus",
                            LastName = "Fring"
                        });
                });

            modelBuilder.Entity("tutorial_8.Models.Medicament", b =>
                {
                    b.Property<int>("idMedicament")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("idMedicament");

                    b.ToTable("Medicament");

                    b.HasData(
                        new
                        {
                            idMedicament = 1,
                            Description = "Used to reduce pain, fever, or inflammation.",
                            Name = "Aspirin",
                            Type = "Antipyretic"
                        },
                        new
                        {
                            idMedicament = 2,
                            Description = "Minor tranquilizer",
                            Name = "Meprobamate",
                            Type = "Tranqulizer"
                        },
                        new
                        {
                            idMedicament = 3,
                            Description = "To treat high blood cholesterol and reduce the risk of cardiovascular disease",
                            Name = "Mevacor",
                            Type = "Statin medication"
                        });
                });

            modelBuilder.Entity("tutorial_8.Models.Patient", b =>
                {
                    b.Property<int>("IdPatient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("Date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdPatient");

                    b.ToTable("Patient");

                    b.HasData(
                        new
                        {
                            IdPatient = 1,
                            BirthDate = new DateTime(1990, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Harvey",
                            LastName = "Specter"
                        },
                        new
                        {
                            IdPatient = 2,
                            BirthDate = new DateTime(1991, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Mike",
                            LastName = "Ross"
                        },
                        new
                        {
                            IdPatient = 3,
                            BirthDate = new DateTime(1988, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Louis",
                            LastName = "Litt"
                        },
                        new
                        {
                            IdPatient = 4,
                            BirthDate = new DateTime(1994, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Donna",
                            LastName = "Pulsen"
                        });
                });

            modelBuilder.Entity("tutorial_8.Models.Prescription", b =>
                {
                    b.Property<int>("idPrescription")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("Date");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("Date");

                    b.Property<int>("IdPatient")
                        .HasColumnType("int");

                    b.Property<int>("idDoctor")
                        .HasColumnType("int");

                    b.HasKey("idPrescription");

                    b.HasIndex("IdPatient");

                    b.HasIndex("idDoctor");

                    b.ToTable("Prescription");

                    b.HasData(
                        new
                        {
                            idPrescription = 1,
                            Date = new DateTime(2021, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2021, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPatient = 2,
                            idDoctor = 1
                        },
                        new
                        {
                            idPrescription = 2,
                            Date = new DateTime(2021, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2021, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPatient = 3,
                            idDoctor = 2
                        },
                        new
                        {
                            idPrescription = 3,
                            Date = new DateTime(2021, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2021, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdPatient = 4,
                            idDoctor = 3
                        });
                });

            modelBuilder.Entity("tutorial_8.Models.Prescription_Medicament", b =>
                {
                    b.Property<int>("idPrescription")
                        .HasColumnType("int");

                    b.Property<int>("idMedicament")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Dose")
                        .HasColumnType("int");

                    b.HasKey("idPrescription", "idMedicament");

                    b.HasIndex("idMedicament");

                    b.ToTable("Prescription_Medicament");

                    b.HasData(
                        new
                        {
                            idPrescription = 2,
                            idMedicament = 1,
                            Details = "XYZ",
                            Dose = 2
                        },
                        new
                        {
                            idPrescription = 1,
                            idMedicament = 3,
                            Details = "ABC",
                            Dose = 4
                        },
                        new
                        {
                            idPrescription = 1,
                            idMedicament = 1,
                            Details = "abc",
                            Dose = 4
                        });
                });

            modelBuilder.Entity("tutorial_8.Models.Prescription", b =>
                {
                    b.HasOne("tutorial_8.Models.Patient", "Patient")
                        .WithMany("Prescriptions")
                        .HasForeignKey("IdPatient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tutorial_8.Models.Doctor", "Doctor")
                        .WithMany("Prescriptions")
                        .HasForeignKey("idDoctor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("tutorial_8.Models.Prescription_Medicament", b =>
                {
                    b.HasOne("tutorial_8.Models.Medicament", "Medicament")
                        .WithMany("Prescription_Medicaments")
                        .HasForeignKey("idMedicament")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tutorial_8.Models.Prescription", "Prescription")
                        .WithMany("Prescription_Medicaments")
                        .HasForeignKey("idPrescription")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medicament");

                    b.Navigation("Prescription");
                });

            modelBuilder.Entity("tutorial_8.Models.Doctor", b =>
                {
                    b.Navigation("Prescriptions");
                });

            modelBuilder.Entity("tutorial_8.Models.Medicament", b =>
                {
                    b.Navigation("Prescription_Medicaments");
                });

            modelBuilder.Entity("tutorial_8.Models.Patient", b =>
                {
                    b.Navigation("Prescriptions");
                });

            modelBuilder.Entity("tutorial_8.Models.Prescription", b =>
                {
                    b.Navigation("Prescription_Medicaments");
                });
#pragma warning restore 612, 618
        }
    }
}
